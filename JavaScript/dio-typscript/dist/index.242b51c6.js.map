{"mappings":"AAuIA,MAAM,WAAW;IAKb,YAAY,IAAI,EAAE,KAAK,EAAC,MAAM,CAAE;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,MAAM;KAC/B;CACJ;AAED,MAAM,GAAG,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE,EAAC,UAAU,CAAC,AAAC;AAEpD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC","sources":["index.ts"],"sourcesContent":["//function soma (a: number,b:number) {\r\n//\r\n//    return a + b;\r\n//}\r\n//\r\n//console.log(soma(3,5));\r\n\r\n//=--------------nterface (Define um contrato de estrutura de dados)\r\n//\r\n//interface IAnimal {\r\n//nome: string;\r\n//tipo: 'terrestre' | 'aquatico';\r\n//\r\n//}\r\n//\r\n//interface IFelino extends IAnimal {\r\n//visaoNoturna: boolean;\r\n//porte: 'pequeno' | 'Médio' | 'Grande';\r\n//}\r\n//\r\n//\r\n//const felino: IFelino = {\r\n//nome:  'Leão',\r\n//tipo: \"terrestre\",\r\n//visaoNoturna:true,\r\n//porte:'pequeno',\r\n//\r\n//}\r\n//\r\n//type IDomestico = IFelino | IAnimal; //---------------- (Type é usado para unir Interfaces)\r\n//\r\n//const animal: IDomestico = {\r\n//   nome: 'Gato',\r\n//   tipo:'terrestre',\r\n//   visaoNoturna:true,\r\n//   porte:'Grande', \r\n//\r\n//    \r\n//    }\r\n//\r\n//console.log(animal, felino);\r\n//\r\n\r\n// -----Informar o tipo de elemento ao typescript\r\n//const input = document.getElementById('input') as HTMLInputElement;\r\n//input.addEventListener('input', (event) => {\r\n//console.log('Digitei');\r\n//});\r\n//\r\n//const ver = document.getElementById('ver') as HTMLButtonElement;\r\n//\r\n//ver.addEventListener('click', (event) => {\r\n//\r\n//    console.log(input.value);\r\n//});\r\n\r\n// ----------------Generic types\r\n\r\n//function adicionaApendiceALista<T>(array: any[], valor: T){\r\n//\r\n//    console.log(array.map(item => item + valor));\r\n//}\r\n//\r\n//adicionaApendiceALista([1,2,3],2);\r\n//\r\n\r\n//// ------ Condicionais apartir de parâmetros\r\n//interface IUsuario {\r\n//id: string;\r\n//email: string;\r\n//}\r\n//\r\n//\r\n//interface IAdim extends IUsuario{\r\n//cargo: 'gerente' | 'coordenador' | 'supervisor'\r\n//\r\n//}\r\n//\r\n//function redirecione(usuario: IUsuario | IAdim){\r\n//if ('cargo' in usuario){\r\n//    return console.group('redirecione para área de adiministração', usuario);\r\n//}\r\n//\r\n// return console.group('redirecione para área de usuario', usuario);\r\n//}\r\n//\r\n//const usuario:IAdim = {\r\n//    id: 'Anderson',\r\n//    email:'Anderson.silvab@gmail.com',\r\n//    cargo:'coordenador'\r\n//};\r\n//\r\n//const usuario2:IAdim | IUsuario = {\r\n//    id: 'Anderson',\r\n//    email:'Anderson.silvab@gmail.com',\r\n//    \r\n//};\r\n//\r\n//redirecione(usuario);\r\n//redirecione(usuario2);\r\n\r\n//--------------Parâmetro opcional\r\n\r\n// ------ Condicionais apartir de parâmetros\r\n//interface IUsuario {\r\n//    id: string;\r\n//    email: string;\r\n//    cargo?: 'Gerente' | 'Coordenador' | 'Supervisor' | 'Funcionário'\r\n//    }\r\n//   \r\n//function redirecione(usuario: IUsuario){\r\n//    if (usuario.cargo){\r\n//        return console.log(\"Redirecione para a URL especifica\");\r\n//    }\r\n//    return console.log(\"Redirecione para usuário\");\r\n//}\r\n//    \r\n//const usuario1: IUsuario = {\r\n//    id:'Anderson',\r\n//    email:'Anderson.silvab@gmail.com',\r\n//\r\n//}\r\n//\r\n//redirecione(usuario1);\r\n\r\ninterface Cachorro {\r\nnome: string;\r\nidade: number;\r\nparqueFavorito?: string;\r\n}\r\n\r\ntype CachorroSomenteLeitura = {\r\n    +readonly [k in keyof Cachorro]-?: Cachorro[k];\r\n}\r\n\r\nclass MeuCachorro implements CachorroSomenteLeitura{\r\n    idade: number;\r\n    nome: string;\r\n    parqueFavorito: string;\r\n\r\n    constructor(nome, idade,parque) {\r\n        this.nome = nome;\r\n        this.idade = idade;\r\n        this.parqueFavorito = parque\r\n    }\r\n}\r\n\r\nconst cao = new MeuCachorro('Apolo', 14,'Jaqueira');\r\n\r\nconsole.log(cao);"],"names":[],"version":3,"file":"index.242b51c6.js.map","sourceRoot":"/__parcel_source_root/"}